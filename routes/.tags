!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
TSPLibMatrixParser	api.js	/^function TSPLibMatrixParser(dimension, format) {$/;"	c
TSPLibMatrixParser.getMatrix	api.js	/^TSPLibMatrixParser.prototype.getMatrix = function() {$/;"	m
TSPLibMatrixParser.isUsed	api.js	/^TSPLibMatrixParser.prototype.isUsed = function() {$/;"	m
TSPLibMatrixParser.setNext	api.js	/^TSPLibMatrixParser.prototype.setNext = function(distances) {$/;"	m
TSPLibParserData	api.js	/^function TSPLibParserData(data) {$/;"	c
TSPLibParserData.coordsToDistances	api.js	/^TSPLibParserData.prototype.coordsToDistances = function(coords) {$/;"	m
TSPLibParserData.getDimension	api.js	/^TSPLibParserData.prototype.getDimension = function() {$/;"	m
TSPLibParserData.getDistances	api.js	/^TSPLibParserData.prototype.getDistances = function() {$/;"	m
TSPLibParserData.getEdgeWeightFormat	api.js	/^TSPLibParserData.prototype.getEdgeWeightFormat = function() {$/;"	m
TSPLibParserData.getEdgeWeightType	api.js	/^TSPLibParserData.prototype.getEdgeWeightType = function() {$/;"	m
TSPLibParserData.setDimension	api.js	/^TSPLibParserData.prototype.setDimension = function() {$/;"	m
TSPLibParserData.setDistances	api.js	/^TSPLibParserData.prototype.setDistances = function() {$/;"	m
TSPLibParserData.setEdgeWeightFormat	api.js	/^TSPLibParserData.prototype.setEdgeWeightFormat = function() {$/;"	m
TSPLibParserData.setEdgeWeightType	api.js	/^TSPLibParserData.prototype.setEdgeWeightType = function() {$/;"	m
TSPLibParserData.validate	api.js	/^TSPLibParserData.prototype.validate = function() {$/;"	m
TSPResult	api.js	/^function TSPResult() {$/;"	c
TSPResult.export	api.js	/^TSPResult.prototype.export = function() {$/;"	m
TSPResult.setLowerBound	api.js	/^TSPResult.prototype.setLowerBound = function(lower_bound) {$/;"	m
TSPResult.setMax	api.js	/^TSPResult.prototype.setMax = function(max) {$/;"	m
TSPResult.setMaxRoute	api.js	/^TSPResult.prototype.setMaxRoute = function(max_route) {$/;"	m
TSPResult.setMin	api.js	/^TSPResult.prototype.setMin = function(min) {$/;"	m
TSPResult.setMinRoute	api.js	/^TSPResult.prototype.setMinRoute = function(min_route) {$/;"	m
_calculate_route_length	api.js	/^function _calculate_route_length(route, model) {$/;"	f
_cartesian_product_of	api.js	/^function _cartesian_product_of() {$/;"	f
_concorde_calculate	api.js	/^function _concorde_calculate(model_path) {$/;"	f
_elastic_nets_calculate	api.js	/^function _elastic_nets_calculate(coordinates, method_params, model) {$/;"	f
_elastic_nets_centroid	api.js	/^function _elastic_nets_centroid(norm_coordinates) {$/;"	f
_elastic_nets_generate_neurons	api.js	/^function _elastic_nets_generate_neurons(centroid, num_neurons, radius) {$/;"	f
_elastic_nets_get_real_distances	api.js	/^function _elastic_nets_get_real_distances(coordinates) {$/;"	f
_elastic_nets_normalize_coordinates	api.js	/^function _elastic_nets_normalize_coordinates(coordinates) {$/;"	f
_elastic_nets_solution	api.js	/^function _elastic_nets_solution(norm_coordinates, neurons) {$/;"	f
_elastic_nets_update_neurons	api.js	/^function _elastic_nets_update_neurons(diff, coordinates, weights, neurons, k, method_params, iteration) {$/;"	f
_elastic_nets_weighten_neurons	api.js	/^function _elastic_nets_weighten_neurons(norm_coordinates, neurons, num_neurons, k) {$/;"	f
_get_distance	api.js	/^function _get_distance(value_i, value_j) {$/;"	f
_get_temp_directory	api.js	/^function _get_temp_directory() {$/;"	f
_greedy_calculate	api.js	/^function _greedy_calculate(model, num_items) {$/;"	f
_grouper	api.js	/^function _grouper(array, k) {$/;"	f
_model_to_tsplib	api.js	/^function _model_to_tsplib(model, num_items, type, method_params) {$/;"	f
_monte_carlo_calculate	api.js	/^function _monte_carlo_calculate(model, num_items, num_iterations) {$/;"	f
_touch_model	api.js	/^function _touch_model(model, type) {$/;"	f
diff	api.js	/^  var diff = 0;$/;"	v
exports.calculate	api.js	/^exports.calculate = function(req, res) {$/;"	f
exports.generate	api.js	/^exports.generate = function(req, res) {$/;"	f
exports.parse	api.js	/^exports.parse = function(req, res) {$/;"	f
exports.plotToMatrix	api.js	/^exports.plotToMatrix = function(req, res) {$/;"	f
exports.reoptimize	api.js	/^exports.reoptimize = function(req, res) {$/;"	f
num_equals	api.js	/^  var num_equals = 0;$/;"	v
